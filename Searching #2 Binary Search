class Solution {
    int binarysearch(int arr[], int n, int k) {
    int mid,high=n-1,low=0;
       //here if high <low no elements in list so if list has elements
       while(high>=low){
           mid=(high+low)/2;
           if(arr[mid]==k)
//return the mid position
            return mid;
           else if (arr[mid]<k)
/*if mid <k we donot need to search 0 to mid as binary search 
takes sorted array if id<k then all elements less than mid<k and element
wont be there in 0 to mid so we can skip searching that part
*/
                low=mid+1;
           else 
/*if arr[mid]>k then we donot have to search mid to n-1 as mid and above 
all will be greater than k so k wont be there in that part so we can skip
searching it */
                high=mid-1;
       }
//if element not in array return -1
       return -1;
    }
}
